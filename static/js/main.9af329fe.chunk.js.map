{"version":3,"sources":["App.js","index.js"],"names":["App","useState","botData","setBotData","posData","setPosData","closedData","setClosedData","showBot","setShowBot","showCurPos","setShowCurPos","showClosed","setShowClosed","bots","process","positions","closed","useEffect","fetch","then","response","json","data","dollarUS","Intl","NumberFormat","style","currency","categories","seriesDataPL","seriesDataTarget","Navbar","bg","sticky","Container","fluid","Brand","className","src","alt","width","Button","href","Row","closedValuesPL","Object","entries","reduce","dv","d","closeDate","v","pnl","moment","format","map","sort","a","b","Date","closedValuesTarget","quantity","Array","from","acc","currentValue","currentIndex","chartData","options","annotations","xaxis","x","strokeDashArray","borderColor","label","orientation","color","background","text","chart","id","type","foreColor","toolbar","show","zoom","enabled","autoScaleYaxis","tooltip","dataLabels","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","series","name","height","buildChart","Col","sm","Table","size","colSpan","winLossCount","wins","losses","winPercent","Math","round","length","lossPercent","expectancy","filter","t","risk","values","draw","riskReward","cost","ror","metrics","ButtonGroup","variant","onClick","responsive","bot","i","pcount","seed","roi","allocation","pl","plPerc","dataBotFoot","days","pos","symbol","strategy","expiration","currentPositionCount","dataPosFoot","valueOf","openDate","closedPositionCount","target","dataClosedFoot","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9af329fe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Table,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  ButtonGroup\r\n} from 'react-bootstrap';\r\nimport './App.css';\r\nimport moment from 'moment';\r\nimport Chart from 'react-apexcharts';\r\n\r\nfunction App() {\r\n\r\n  const [botData, setBotData] = useState()\r\n  const [posData, setPosData] = useState()\r\n  const [closedData, setClosedData] = useState()\r\n\r\n  const [showBot, setShowBot] = useState(true)\r\n  const [showCurPos, setShowCurPos] = useState(false)\r\n  const [showClosed, setShowClosed] = useState(false)\r\n\r\n  const toggleShowBot = () => {\r\n    setShowBot(!showBot)\r\n    setShowCurPos(false)\r\n    setShowClosed(false)\r\n  }\r\n  const toggleShowCurPos = () => {\r\n    setShowCurPos(!showCurPos)\r\n    setShowBot(false)\r\n    setShowClosed(false)\r\n  }\r\n  const toggleShowClosed = () => {\r\n    setShowClosed(!showClosed)\r\n    setShowCurPos(false)\r\n    setShowBot(false)\r\n  };\r\n\r\n  const bots = process.env.PUBLIC_URL + '/botdata/bots.json'\r\n  const positions = process.env.PUBLIC_URL + '/botdata/positions.json'\r\n  const closed = process.env.PUBLIC_URL + '/botdata/closed.json'\r\n\r\n  useEffect(() => {\r\n    fetch(bots)\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        setBotData(data)\r\n      ).then(\r\n        fetch(positions)\r\n          .then((response) => response.json())\r\n          .then((data) =>\r\n            setPosData(data)\r\n          )\r\n      ).then(\r\n        fetch(closed)\r\n          .then((response) => response.json())\r\n          .then((data) =>\r\n            setClosedData(data)\r\n          )\r\n      )\r\n  }, [bots, closed, positions])\r\n\r\n  const dollarUS = Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  let categories = []\r\n  let seriesDataPL = []\r\n  let seriesDataTarget = []\r\n\r\n  const buildChart = () => {\r\n\r\n    const closedValuesPL = Object.entries((closedData || []).reduce((dv, { closeDate: d, pnl: v }) => ({ ...dv, [moment(d).format('MMM DD YYYY')]: (dv[moment(d).format('MMM DD YYYY')] || 0) + v }), {})).map(([closeDate, pnl]) => ({ closeDate, pnl })).sort((a, b) => { const dateA = new Date(a.closeDate); const dateB = new Date(b.closeDate); return dateA - dateB })\r\n    const closedValuesTarget = Object.entries((closedData || []).reduce((dv, { closeDate: d, quantity: v }) => ({ ...dv, [moment(d).format('MMM DD YYYY')]: (dv[moment(d).format('MMM DD YYYY')] || 0) + (v / v) }), {})).map(([closeDate, quantity]) => ({ closeDate, quantity })).sort((a, b) => { const dateA = new Date(a.closeDate); const dateB = new Date(b.closeDate); return dateA - dateB })\r\n    categories = Array.from(closedValuesPL.map(({ closeDate }) => closeDate)).sort((a, b) => { const dateA = new Date(a.closeDate); const dateB = new Date(b.closeDate); return dateA - dateB })\r\n\r\n    seriesDataPL = Array.from(closedValuesPL.map(({ pnl }) => pnl)).reduce((acc, currentValue, currentIndex) => {\r\n      if (currentIndex === 0) {\r\n        return [currentValue];\r\n      }\r\n      return [...acc, currentValue + acc[currentIndex - 1]];\r\n    }, [])\r\n\r\n    seriesDataTarget = Array.from(closedValuesTarget.map(({ quantity }) => quantity * 25)).reduce((acc, currentValue, currentIndex) => {\r\n      if (currentIndex === 0) {\r\n        return [currentValue];\r\n      }\r\n      return [...acc, currentValue + acc[currentIndex - 1]];\r\n    }, [])\r\n\r\n    const chartData = {\r\n      options: {\r\n        annotations: {\r\n          xaxis: [\r\n            {\r\n              x: \"Jan 24 2023\",\r\n              strokeDashArray: 1,\r\n              borderColor: \"#FF10F0\",\r\n              label: {\r\n                orientation: 'horizontal',\r\n                borderColor: \"#FF10F0\",\r\n                style: {\r\n                  color: \"#fff\",\r\n                  background: \"#FF10F0\"\r\n                },\r\n                text: [\"FIXED ROR ERROR\", \"START NEW POSITION STRATEGY\"]\r\n              }\r\n            }\r\n          ]\r\n        },\r\n          chart: {\r\n          id: 'area',\r\n          type: 'area',\r\n          foreColor: '#fff',\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n          zoom: {\r\n            enabled: false,\r\n            autoScaleYaxis: true\r\n          }\r\n        },\r\n        tooltip: {\r\n          enabled: true\r\n        },\r\n        xaxis:\r\n        {\r\n          categories: categories,\r\n          tooltip: {\r\n            enabled: false\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        }\r\n      },\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.7,\r\n          opacityTo: 0.5,\r\n          stops: [0, 50, 100]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Projected P/L\",\r\n          data: seriesDataTarget,\r\n          color: '#1589FF',\r\n        },\r\n        {\r\n          name: \"Actual P/L\",\r\n          data: seriesDataPL,\r\n          color: '#16F529'\r\n        }\r\n      ],\r\n    }\r\n    return (\r\n      <div className=\"pl-chart mb-3 text-white\">\r\n        Ελπις (Elpis): Expectancy Strategy\r\n        <Chart\r\n          options={chartData.options}\r\n          series={chartData.series}\r\n          type=\"area\"\r\n          width=\"100%\"\r\n          height=\"175%\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const dataBotBody = () => (botData || []).sort((a, b) =>\r\n    b.pnl - a.pnl).map((bot, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td className='align-middle gold'>{bot.name}</td>\r\n          <td className='align-middle text-center'>{bot.pcount}</td>\r\n          <td className='align-middle text-center'>{dollarUS.format(bot.seed)}</td>\r\n          <td className='align-middle text-center'>{dollarUS.format(bot.draw)}</td>\r\n          <td className={`align-middle text-center ${bot.pnl < 0 ? \"red\" : \"green\"}`}>{dollarUS.format(bot.pnl)}<br></br>{Math.round(bot.roi * 100)}%</td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n  const dataBotFoot = () => {\r\n    const positions = Object.values(botData || []).reduce((t, { pcount }) => t + pcount, 0)\r\n    const allocation = Object.values(botData || []).reduce((t, { seed }) => t + seed, 0)\r\n    const risk = Object.values(botData || []).reduce((t, { draw }) => t + draw, 0)\r\n    const pl = Object.values(botData || []).reduce((t, { pnl }) => t + pnl, 0)\r\n    const plPerc = Math.round((100 * pl / allocation))\r\n    return (\r\n      <tr>\r\n        <td className='align-middle'>TOTALS</td>\r\n        <td className='align-middle text-center'>{positions}</td>\r\n        <td className='align-middle text-center'>{dollarUS.format(allocation)}</td>\r\n        <td className='align-middle text-center'>{dollarUS.format(risk)}</td>\r\n        <td className={`align-middle text-center ${pl < 0 ? \"red\" : \"green\"}`}>{dollarUS.format(pl)}\r\n          <br></br>{plPerc}%\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  const dataPosBody = () => (posData || []).sort((a, b) =>\r\n    a.days - b.days).map((pos, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td className=\"gold\">\r\n            <div className=\"text-white\">{pos.symbol} | {pos.strategy}</div>\r\n            <div>{pos.text}</div>\r\n            <div className=\"grey\">{moment(pos.expiration).format('MMM D')} </div>\r\n          </td>\r\n          <td className='align-middle text-center'>{pos.days}</td>\r\n          <td className='align-middle text-center'>{pos.quantity}</td>\r\n          <td className='align-middle text-center'>{dollarUS.format(pos.draw)}</td>\r\n          <td className={`align-middle text-center ${pos.pnl < 0 ? \"red\" : \"green\"}`}>{dollarUS.format(pos.pnl)}</td>\r\n          <td className={`align-middle text-center ${pos.ror < 0 ? \"red\" : \"green\"}`}>{Math.round(pos.ror * 100)}%</td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n  const dataPosFoot = () => {\r\n    const currentPositionCount = (posData || []).length\r\n    const risk = Object.values(posData || []).reduce((t, { draw }) => t + draw, 0)\r\n    const pl = Object.values(posData || []).reduce((t, { pnl }) => t + pnl, 0)\r\n    const plPerc = Math.round((100 * pl / risk))\r\n    return (\r\n      <tr>\r\n        <td className='align-middle' colSpan='3'>TOTALS: {currentPositionCount} Current Positions</td>\r\n        <td className='align-middle text-center'>{dollarUS.format(risk)}</td>\r\n        <td className={`align-middle text-center ${pl < 0 ? \"red\" : \"green\"}`}>{dollarUS.format(pl)}</td>\r\n        <td className={`align-middle text-center ${plPerc < 0 ? \"red\" : \"green\"}`}>{plPerc}%</td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  const dataClosedBody = () => (closedData || []).sort((a, b) =>\r\n    moment(b.closeDate).valueOf() - moment(a.closeDate)).map((pos, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td className=\"gold\">\r\n            <div className=\"text-white\">{pos.symbol} | {pos.type}</div>\r\n            <div>{pos.text}</div>\r\n            <div className=\"grey\">Quantity: {pos.quantity}</div>\r\n          </td>\r\n          <td className='align-middle text-center'>{moment(pos.openDate).format('MMM D HH:mm')}</td>\r\n          <td className='align-middle text-center'>{moment(pos.closeDate).format('MMM D HH:mm')}</td>\r\n          <td className='align-middle text-center'>{dollarUS.format(pos.draw)}</td>\r\n          <td className='align-middle text-center'>{dollarUS.format(\"25\")}</td>\r\n          <td className={`align-middle text-center ${pos.pnl < 0 ? \"red\" : \"green\"}`}>{dollarUS.format(pos.pnl)}</td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n  const dataClosedFoot = () => {\r\n    const closedPositionCount = (closedData || []).length\r\n    const risk = Object.values(closedData || []).reduce((t, { draw }) => t + draw, 0)\r\n    const target = (Object.values(closedData || []).reduce((t, { quantity }) => t + (quantity / quantity) * 25, 0))\r\n    const pnl = dollarUS.format(Math.round((Object.values(closedData || []).reduce((t, { pnl }) => t + pnl, 0))))\r\n    return (\r\n      <tr>\r\n        <td className='align-middle' colSpan='3'>TOTALS: {closedPositionCount} Closed Positions</td>\r\n        <td className='align-middle text-center'>{dollarUS.format(risk)}</td>\r\n        <td className='align-middle text-center'>{dollarUS.format(target)}</td>\r\n        <td className={`align-middle text-center ${pnl < 0 ? \"red\" : \"green\"}`}>{pnl}</td>\r\n      </tr>\r\n    )\r\n  }\r\n\r\n  const metrics = () => {\r\n    const winLossCount = (closedData || []).reduce((acc, { pnl }) => {\r\n      if (pnl > 0) {\r\n        acc.wins++;\r\n      } else if (pnl < 0) {\r\n        acc.losses++;\r\n      }\r\n      return acc;\r\n    }, { wins: 0, losses: 0 });\r\n    const winPercent = Math.round(winLossCount.wins / (closedData || []).length * 100) / 100\r\n    const lossPercent = Math.round(winLossCount.losses / (closedData || []).length * 100) / 100\r\n    const avgWin = (closedData || []).filter(({ pnl }) => pnl > 0).reduce((t, { pnl }) => t + pnl, 0) / (closedData || []).filter(({ pnl }) => pnl > 0).length\r\n    const avgLoss = (closedData || []).filter(({ pnl }) => pnl < 0).reduce((t, { pnl }) => t + pnl, 0) * -1 / (closedData || []).filter(({ pnl }) => pnl < 0).length\r\n    const expectancy = (winPercent * avgWin) - (lossPercent * avgLoss)\r\n    const risk = Object.values(closedData || []).reduce((t, { draw }) => t + draw, 0)\r\n    const target = (Object.values(closedData || []).reduce((t, { cost }) => t + cost, 0)) * -1\r\n    const pnl = Math.round((Object.values(closedData || []).reduce((t, { pnl }) => t + pnl, 0)))\r\n    const riskReward = target / risk\r\n    const ror = pnl / risk\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td className='align-middle'>Win Percentage</td>\r\n          <td className='align-middle'>{Math.round(winPercent * 100)}%</td>\r\n        </tr>\r\n        <tr>\r\n          <td className='align-middle'>Loss Percentage</td>\r\n          <td className='align-middle'>{Math.round(lossPercent * 100)}%</td>\r\n        </tr>\r\n        <tr>\r\n          <td className='align-middle'>Risk-to-Reward Ratio</td>\r\n          <td className='align-middle'>{Math.round(riskReward * 100)}%</td>\r\n        </tr>\r\n        <tr>\r\n          <td className='align-middle'>Return on Risk</td>\r\n          <td className='align-middle'>{Math.round(ror * 100)}%</td>\r\n        </tr>\r\n        <tr>\r\n          <td className='align-middle'>Expectancy Per Trade</td>\r\n          <td className='align-middle'>{dollarUS.format(expectancy)}</td>\r\n        </tr>\r\n      </tbody>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" sticky=\"top\">\r\n        <Container fluid>\r\n          <Navbar.Brand className=\"text-light p-0\"><span><img src={process.env.PUBLIC_URL + \"/OptionsAnalyzerS.png\"} alt=\"logo - target with arrow\" className=\"mt-1 mb-2\" style={{ width: \"2.25em\" }} />&nbsp;<Button className=\"b-color mt-2 mb-2 p-2 text-center\" href=\"https://optionalpha.com/\">Data Sourced from Option Alpha</Button></span></Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Container fluid>\r\n        <Row className=\"overflow-hidden\">\r\n\r\n          {buildChart()}\r\n\r\n          <Col sm={2}>\r\n            <Table size=\"sm\" className=\"text-light border border-secondary mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\" colSpan='2'>METRICS</th>\r\n                </tr>\r\n              </thead>\r\n              {metrics()}\r\n            </Table>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Row className=\"mx-auto mt-3\">\r\n              <ButtonGroup>\r\n                <Button variant=\"outline-secondary\" size=\"small\" className=\"mb-2\" onClick={toggleShowBot}>Bot Details</Button>\r\n                <Button variant=\"outline-secondary\" size=\"small\" className=\"mb-2\" onClick={toggleShowCurPos}>Current Positions</Button>\r\n                <Button variant=\"outline-secondary\" size=\"small\" className=\"mb-2\" onClick={toggleShowClosed}>Closed Positions</Button>\r\n              </ButtonGroup>\r\n            </Row>\r\n\r\n            <Row className=\"mx-auto mt-3 mb-2 p-1\">\r\n              {showBot ? (\r\n                <Table responsive size=\"sm\" className=\"sticky text-light border border-secondary\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left header align-middle\">BOT</th>\r\n                      <th className=\"text-center align-middle\">POSITIONS</th>\r\n                      <th className=\"text-center align-middle\">ALLOCATION</th>\r\n                      <th className=\"text-center align-middle\">CAP AT RISK</th>\r\n                      <th className=\"text-center align-middle\">P/L</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataBotBody()}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {dataBotFoot()}\r\n                  </tfoot>\r\n                </Table>\r\n              ) : null}\r\n\r\n              {showCurPos ? (\r\n                <Table responsive size=\"sm\" className=\"sticky text-light border border-secondary\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left align-middle\">CURRENT POSITIONS</th>\r\n                      <th className=\"text-center align-middle\">DAYS</th>\r\n                      <th className=\"text-center align-middle\">QTY</th>\r\n                      <th className=\"text-center align-middle\">CAP AT RISK</th>\r\n                      <th className=\"text-center align-middle\">P/L</th>\r\n                      <th className=\"text-center align-middle\">RETURN ON RISK</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataPosBody()}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {dataPosFoot()}\r\n                  </tfoot>\r\n                </Table>\r\n              ) : null}\r\n\r\n              {showClosed ? (\r\n                <Table responsive size=\"sm\" className=\"sticky text-light border border-secondary\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left align-middle\">CLOSED POSITIONS</th>\r\n                      <th className=\"text-center align-middle\">OPEN DATE</th>\r\n                      <th className=\"text-center align-middle\">CLOSED DATE</th>\r\n                      <th className=\"text-center align-middle\">CAP RISKED</th>\r\n                      <th className=\"text-center align-middle\">TARGET P/L</th>\r\n                      <th className=\"text-center align-middle\">P/L</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataClosedBody()}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {dataClosedFoot()}\r\n                  </tfoot>\r\n                </Table>\r\n              ) : null}\r\n\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}